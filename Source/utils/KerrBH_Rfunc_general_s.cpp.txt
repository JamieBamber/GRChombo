#include "KerrBH_Rfunc_general_s.hpp"

extern "C" void Rfunc(double M, double mu, double omega_Re, double omega_Im, double a, int l, int m, int s, int sgn_alpha, int sgn_beta, bool KS_or_BL, double t, double r, 
        double *Rfunc_Re, double *Rfunc_Im, double *d_Rfunc_dr_Re, double *d_Rfunc_dr_Im, double *dd_Rfunc_ddr_Re, double *dd_Rfunc_ddr_Im){
	std::complex<double> omega(omega_Re, omega_Im);
	KerrBH_Rfunc Rfunc(M, mu, omega, a, l, m, s);
	// handle errors
	try {
		Rfunc_with_deriv result = Rfunc.compute_with_deriv(r, t, sgn_alpha, sgn_beta, KS_or_BL);
		*Rfunc_Re = result.Rfunc_Re;
		*Rfunc_Im = result.Rfunc_Im;
		*d_Rfunc_dr_Re = result.d_Rfunc_dr_Re;
		*d_Rfunc_dr_Im = result.d_Rfunc_dr_Im;
		*dd_Rfunc_ddr_Re = result.dd_Rfunc_ddr_Re;
		*dd_Rfunc_ddr_Im = result.dd_Rfunc_ddr_Im;	
	} catch (...) {
		std::cout << "exception occurred " << std::endl;
		*Rfunc_Re = std::nan("");
                *Rfunc_Im = std::nan("");
                *d_Rfunc_dr_Re = std::nan("");
                *d_Rfunc_dr_Im = std::nan("");
                *dd_Rfunc_ddr_Re = std::nan("");
                *dd_Rfunc_ddr_Im = std::nan("");
	}
}


